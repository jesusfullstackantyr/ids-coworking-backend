CREATE TABLE categories (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  price DECIMAL(10, 2) NOT NULL,
  capacity INT,
  space VARCHAR(255),
  status VARCHAR(50),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  is_deleted TINYINT(1) DEFAULT 0
);

CREATE TABLE offices (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  image_url VARCHAR(255),
  status VARCHAR(50),
  id_category INT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  is_deleted TINYINT(1) DEFAULT 0,
  FOREIGN KEY (id_category) REFERENCES categories(id)
);

CREATE TABLE `person` (
  `id` int unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `lastname` varchar(45) NOT NULL,
  `email` varchar(255) NOT NULL,
  `phone` bigint NOT NULL,
  `occupation` varchar(255) NOT NULL,
  `id_address` int NOT NULL,
  `id_user` int NOT NULL,
  `status` varchar(45) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- MySQL Script generated by MySQL Workbench
-- Sun Oct 22 19:29:00 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema cowork
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema cowork
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `cowork` DEFAULT CHARACTER SET utf8 ;
USE `cowork` ;

-- -----------------------------------------------------
-- Table `cowork`.`payment_method`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cowork`.`payment_method` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `status` VARCHAR(45) NULL,
  `pb_key_prod` VARCHAR(45) NULL,
  `pr_key_prod` VARCHAR(45) NULL,
  `pb_key_test` VARCHAR(45) NULL,
  `pr_key_test` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cowork`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cowork`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cowork`.`office`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cowork`.`office` (
  `id` INT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cowork`.`contract`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cowork`.`contract` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `amount` FLOAT NULL,
  `start_date` DATE NULL,
  `expiration_date` DATE NULL,
  `status` VARCHAR(45) NULL,
  `id_user` INT NULL,
  `id_office` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `iduser_idx` (`id_user` ASC) VISIBLE,
  INDEX `idoficce_idx` (`id_office` ASC) VISIBLE,
  CONSTRAINT `iduser`
    FOREIGN KEY (`id_user`)
    REFERENCES `cowork`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idoficce`
    FOREIGN KEY (`id_office`)
    REFERENCES `cowork`.`office` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cowork`.`card`
-- -----------------------------------------------------
-- CREATE TABLE IF NOT EXISTS `cowork`.`card` (
--   `id` INT NOT NULL,
--   PRIMARY KEY (`id`))
-- ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cowork`.`payment`
-- -----------------------------------------------------
-- CREATE TABLE IF NOT EXISTS `cowork`.`payment` (
--   `id` INT NOT NULL AUTO_INCREMENT,
--   `amount` FLOAT NULL,
--   `payment_date` DATE NULL,
--   `id_contract` INT NULL,
--   `id_payment_method` INT NULL,
--   `id_card` INT NULL,
--   `id_user` INT NULL,
--   PRIMARY KEY (`id`),
--   INDEX `id_payment_method_idx` (`id_payment_method` ASC) VISIBLE,
--   INDEX `id_contract_idx` (`id_contract` ASC) VISIBLE,
--   INDEX `iduser_idx` (`id_user` ASC) VISIBLE,
--   INDEX `idcard_idx` (`id_card` ASC) VISIBLE,
--   CONSTRAINT `id_payment_method`
--     FOREIGN KEY (`id_payment_method`)
--     REFERENCES `cowork`.`payment_method` (`id`)
--     ON DELETE NO ACTION
--     ON UPDATE NO ACTION,
--   CONSTRAINT `id_contract`
--     FOREIGN KEY (`id_contract`)
--     REFERENCES `cowork`.`contract` (`id`)
--     ON DELETE NO ACTION
--     ON UPDATE NO ACTION,
--   CONSTRAINT `iduser`
--     FOREIGN KEY (`id_user`)
--     REFERENCES `cowork`.`user` (`id`)
--     ON DELETE NO ACTION
--     ON UPDATE NO ACTION,
--   CONSTRAINT `idcard`
--     FOREIGN KEY (`id_card`)
--     REFERENCES `cowork`.`card` (`id`)
--     ON DELETE NO ACTION
--     ON UPDATE NO ACTION)
-- ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

CREATE TABLE payments (
    id INT AUTO_INCREMENT PRIMARY KEY,
    amount DECIMAL(10, 2) NOT NULL,
    payment_date DATE NOT NULL,
    Status VARCHAR(50) NOT NULL,
    id_contract INT,
    id_payment_method INT,
    id_card INT,
    id_user INT,
    FOREIGN KEY (id_contract) REFERENCES contract(id),
    FOREIGN KEY (id_payment_method) REFERENCES payment_method(id),
    FOREIGN KEY (id_card) REFERENCES Card(id_folio),
    FOREIGN KEY (id_user) REFERENCES user(id)
);


CREATE TABLE Card (
    id_folio INT AUTO_INCREMENT PRIMARY KEY,
    headline VARCHAR(255) NOT NULL,
    emitter_type VARCHAR(50) NOT NULL,
    cvv VARCHAR(4) NOT NULL,
    value_with_vat DECIMAL(10, 2) NOT NULL,
    concept VARCHAR(255) NOT NULL,
    phone VARCHAR(20) NOT NULL,
    email VARCHAR(255) NOT NULL,
    card_number VARCHAR(16) NOT NULL,
    expiration_year INT NOT NULL,
    expiration_month INT NOT NULL,
    status ENUM('process', 'accepted', 'rejected') NOT NULL
);